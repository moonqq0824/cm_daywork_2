"""Final schema after refactor

Revision ID: e94d56575c8e
Revises: 
Create Date: 2025-07-10 16:54:51.754896

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e94d56575c8e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='分類名稱'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.String(length=64), nullable=False, comment='登入用帳號 (例如: C0007)'),
    sa.Column('display_name', sa.String(length=100), nullable=False, comment='顯示用姓名 (例如: 施宏岳)'),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=60), nullable=False),
    sa.Column('role', sa.Enum('USER', 'MANAGER', name='userrole'), server_default='USER', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_account_id'), ['account_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('cash_count_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('count_date', sa.DateTime(), nullable=False, comment='盤點日期'),
    sa.Column('counted_total', sa.Numeric(precision=10, scale=2), nullable=False, comment='盤點總額'),
    sa.Column('system_balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='系統帳上餘額'),
    sa.Column('difference', sa.Numeric(precision=10, scale=2), nullable=False, comment='差額'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='操作人員ID'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.Enum('INCOME', 'EXPENDITURE', name='transactiontype'), nullable=False),
    sa.Column('tax_type', sa.Enum('TAXABLE', 'ZERO_TAX', 'TAX_EXEMPT', name='taxtype'), server_default='TAXABLE', nullable=False),
    sa.Column('tax_calculation_method', sa.Enum('EXCLUSIVE', 'INCLUSIVE', name='taxcalculationmethod'), nullable=True),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('applicant_id', sa.Integer(), nullable=False, comment='申請人ID'),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tax', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('erp_document_number', sa.String(length=100), nullable=True, comment='ERP對應單號'),
    sa.Column('application_date', sa.Date(), nullable=False, comment='申請日期'),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'APPROVED', 'REJECTED', name='approvalstatus'), server_default='DRAFT', nullable=False, comment='簽核狀態'),
    sa.Column('approver_id', sa.Integer(), nullable=True, comment='簽核主管ID'),
    sa.Column('approval_date', sa.Date(), nullable=True, comment='簽核日期'),
    sa.Column('rejection_reason', sa.Text(), nullable=True, comment='駁回理由'),
    sa.Column('category_id', sa.Integer(), nullable=True, comment='費用分類ID'),
    sa.ForeignKeyConstraint(['applicant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['approver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cash_count_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('denomination', sa.Integer(), nullable=False, comment='面額 (例如: 1000, 500)'),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='張數/個數'),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False, comment='該面額小計'),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['cash_count_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('line_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction_items')
    op.drop_table('cash_count_details')
    op.drop_table('transactions')
    op.drop_table('cash_count_sessions')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_account_id'))

    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
